// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: epi.proto

#include "epi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_epi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Epi_Location_Coordinate_epi_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_epi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Epi_Location_Data_Age_Status_epi_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_epi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Epi_Location_Data_Age_epi_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_epi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Epi_Location_Data_epi_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_epi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Epi_Location_epi_2eproto;
namespace proto {
class Epi_Location_CoordinateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Epi_Location_Coordinate> _instance;
} _Epi_Location_Coordinate_default_instance_;
class Epi_Location_Data_Age_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Epi_Location_Data_Age_Status> _instance;
} _Epi_Location_Data_Age_Status_default_instance_;
class Epi_Location_Data_AgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Epi_Location_Data_Age> _instance;
} _Epi_Location_Data_Age_default_instance_;
class Epi_Location_DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Epi_Location_Data> _instance;
} _Epi_Location_Data_default_instance_;
class Epi_LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Epi_Location> _instance;
} _Epi_Location_default_instance_;
class EpiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Epi> _instance;
} _Epi_default_instance_;
}  // namespace proto
static void InitDefaultsEpi_Location_Coordinate_epi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Epi_Location_Coordinate_default_instance_;
    new (ptr) ::proto::Epi_Location_Coordinate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Epi_Location_Coordinate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Epi_Location_Coordinate_epi_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEpi_Location_Coordinate_epi_2eproto}, {}};

static void InitDefaultsEpi_Location_Data_Age_Status_epi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Epi_Location_Data_Age_Status_default_instance_;
    new (ptr) ::proto::Epi_Location_Data_Age_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Epi_Location_Data_Age_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Epi_Location_Data_Age_Status_epi_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEpi_Location_Data_Age_Status_epi_2eproto}, {}};

static void InitDefaultsEpi_Location_Data_Age_epi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Epi_Location_Data_Age_default_instance_;
    new (ptr) ::proto::Epi_Location_Data_Age();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Epi_Location_Data_Age::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Epi_Location_Data_Age_epi_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEpi_Location_Data_Age_epi_2eproto}, {
      &scc_info_Epi_Location_Data_Age_Status_epi_2eproto.base,}};

static void InitDefaultsEpi_Location_Data_epi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Epi_Location_Data_default_instance_;
    new (ptr) ::proto::Epi_Location_Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Epi_Location_Data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Epi_Location_Data_epi_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEpi_Location_Data_epi_2eproto}, {
      &scc_info_Epi_Location_Data_Age_epi_2eproto.base,}};

static void InitDefaultsEpi_Location_epi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Epi_Location_default_instance_;
    new (ptr) ::proto::Epi_Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Epi_Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Epi_Location_epi_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEpi_Location_epi_2eproto}, {
      &scc_info_Epi_Location_Coordinate_epi_2eproto.base,
      &scc_info_Epi_Location_Data_epi_2eproto.base,}};

static void InitDefaultsEpi_epi_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Epi_default_instance_;
    new (ptr) ::proto::Epi();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Epi::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Epi_epi_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEpi_epi_2eproto}, {
      &scc_info_Epi_Location_epi_2eproto.base,}};

void InitDefaults_epi_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Epi_Location_Coordinate_epi_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Epi_Location_Data_Age_Status_epi_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Epi_Location_Data_Age_epi_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Epi_Location_Data_epi_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Epi_Location_epi_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Epi_epi_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_epi_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_epi_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_epi_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_epi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Coordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Coordinate, longitude_),
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Coordinate, latitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data_Age_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data_Age_Status, name_),
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data_Age_Status, day_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data_Age, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data_Age, name_),
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data_Age, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location_Data, age_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location, id_),
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location, name_),
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location, population_),
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location, coordinate_),
  PROTOBUF_FIELD_OFFSET(::proto::Epi_Location, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Epi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Epi, locations_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::Epi_Location_Coordinate)},
  { 7, -1, sizeof(::proto::Epi_Location_Data_Age_Status)},
  { 14, -1, sizeof(::proto::Epi_Location_Data_Age)},
  { 21, -1, sizeof(::proto::Epi_Location_Data)},
  { 27, -1, sizeof(::proto::Epi_Location)},
  { 37, -1, sizeof(::proto::Epi)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Epi_Location_Coordinate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Epi_Location_Data_Age_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Epi_Location_Data_Age_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Epi_Location_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Epi_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Epi_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_epi_2eproto = {
  {}, AddDescriptors_epi_2eproto, "epi.proto", schemas,
  file_default_instances, TableStruct_epi_2eproto::offsets,
  file_level_metadata_epi_2eproto, 6, file_level_enum_descriptors_epi_2eproto, file_level_service_descriptors_epi_2eproto,
};

const char descriptor_table_protodef_epi_2eproto[] =
  "\n\tepi.proto\022\005proto\"\232\003\n\003Epi\022&\n\tlocations\030"
  "\001 \003(\0132\023.proto.Epi.Location\032\352\002\n\010Location\022"
  "\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\022\n\npopulation\030"
  "\003 \001(\003\0222\n\ncoordinate\030\005 \001(\0132\036.proto.Epi.Lo"
  "cation.Coordinate\022&\n\004data\030\006 \001(\0132\030.proto."
  "Epi.Location.Data\0321\n\nCoordinate\022\021\n\tlongi"
  "tude\030\001 \001(\001\022\020\n\010latitude\030\002 \001(\001\032\240\001\n\004Data\022)\n"
  "\003age\030\001 \003(\0132\034.proto.Epi.Location.Data.Age"
  "\032m\n\003Age\022\014\n\004name\030\001 \001(\t\0223\n\006status\030\002 \003(\0132#."
  "proto.Epi.Location.Data.Age.Status\032#\n\006St"
  "atus\022\014\n\004name\030\001 \001(\t\022\013\n\003day\030\002 \003(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_epi_2eproto = {
  false, InitDefaults_epi_2eproto, 
  descriptor_table_protodef_epi_2eproto,
  "epi.proto", &assign_descriptors_table_epi_2eproto, 439,
};

void AddDescriptors_epi_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_epi_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_epi_2eproto = []() { AddDescriptors_epi_2eproto(); return true; }();
namespace proto {

// ===================================================================

void Epi_Location_Coordinate::InitAsDefaultInstance() {
}
class Epi_Location_Coordinate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Epi_Location_Coordinate::kLongitudeFieldNumber;
const int Epi_Location_Coordinate::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Epi_Location_Coordinate::Epi_Location_Coordinate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Epi.Location.Coordinate)
}
Epi_Location_Coordinate::Epi_Location_Coordinate(const Epi_Location_Coordinate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:proto.Epi.Location.Coordinate)
}

void Epi_Location_Coordinate::SharedCtor() {
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
}

Epi_Location_Coordinate::~Epi_Location_Coordinate() {
  // @@protoc_insertion_point(destructor:proto.Epi.Location.Coordinate)
  SharedDtor();
}

void Epi_Location_Coordinate::SharedDtor() {
}

void Epi_Location_Coordinate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epi_Location_Coordinate& Epi_Location_Coordinate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Epi_Location_Coordinate_epi_2eproto.base);
  return *internal_default_instance();
}


void Epi_Location_Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Epi.Location.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Epi_Location_Coordinate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Epi_Location_Coordinate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double longitude = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_longitude(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double latitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_latitude(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Epi_Location_Coordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Epi.Location.Coordinate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Epi.Location.Coordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Epi.Location.Coordinate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Epi_Location_Coordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Epi.Location.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->longitude(), output);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Epi.Location.Coordinate)
}

::google::protobuf::uint8* Epi_Location_Coordinate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Epi.Location.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->longitude(), target);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Epi.Location.Coordinate)
  return target;
}

size_t Epi_Location_Coordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Epi.Location.Coordinate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epi_Location_Coordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Epi.Location.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const Epi_Location_Coordinate* source =
      ::google::protobuf::DynamicCastToGenerated<Epi_Location_Coordinate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Epi.Location.Coordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Epi.Location.Coordinate)
    MergeFrom(*source);
  }
}

void Epi_Location_Coordinate::MergeFrom(const Epi_Location_Coordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Epi.Location.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void Epi_Location_Coordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Epi.Location.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epi_Location_Coordinate::CopyFrom(const Epi_Location_Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Epi.Location.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epi_Location_Coordinate::IsInitialized() const {
  return true;
}

void Epi_Location_Coordinate::Swap(Epi_Location_Coordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Epi_Location_Coordinate::InternalSwap(Epi_Location_Coordinate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
}

::google::protobuf::Metadata Epi_Location_Coordinate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_epi_2eproto);
  return ::file_level_metadata_epi_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Epi_Location_Data_Age_Status::InitAsDefaultInstance() {
}
class Epi_Location_Data_Age_Status::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Epi_Location_Data_Age_Status::kNameFieldNumber;
const int Epi_Location_Data_Age_Status::kDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Epi_Location_Data_Age_Status::Epi_Location_Data_Age_Status()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Epi.Location.Data.Age.Status)
}
Epi_Location_Data_Age_Status::Epi_Location_Data_Age_Status(const Epi_Location_Data_Age_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      day_(from.day_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.Epi.Location.Data.Age.Status)
}

void Epi_Location_Data_Age_Status::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Epi_Location_Data_Age_Status_epi_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Epi_Location_Data_Age_Status::~Epi_Location_Data_Age_Status() {
  // @@protoc_insertion_point(destructor:proto.Epi.Location.Data.Age.Status)
  SharedDtor();
}

void Epi_Location_Data_Age_Status::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Epi_Location_Data_Age_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epi_Location_Data_Age_Status& Epi_Location_Data_Age_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Epi_Location_Data_Age_Status_epi_2eproto.base);
  return *internal_default_instance();
}


void Epi_Location_Data_Age_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Epi.Location.Data.Age.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  day_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Epi_Location_Data_Age_Status::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Epi_Location_Data_Age_Status*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.Epi.Location.Data.Age.Status.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated uint32 day = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_day();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_day(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Epi_Location_Data_Age_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Epi.Location.Data.Age.Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Epi.Location.Data.Age.Status.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_day())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_day())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Epi.Location.Data.Age.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Epi.Location.Data.Age.Status)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Epi_Location_Data_Age_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Epi.Location.Data.Age.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Epi.Location.Data.Age.Status.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated uint32 day = 2;
  if (this->day_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_day_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->day_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->day(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Epi.Location.Data.Age.Status)
}

::google::protobuf::uint8* Epi_Location_Data_Age_Status::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Epi.Location.Data.Age.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Epi.Location.Data.Age.Status.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated uint32 day = 2;
  if (this->day_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _day_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->day_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Epi.Location.Data.Age.Status)
  return target;
}

size_t Epi_Location_Data_Age_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Epi.Location.Data.Age.Status)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 day = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->day_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _day_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epi_Location_Data_Age_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Epi.Location.Data.Age.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Epi_Location_Data_Age_Status* source =
      ::google::protobuf::DynamicCastToGenerated<Epi_Location_Data_Age_Status>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Epi.Location.Data.Age.Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Epi.Location.Data.Age.Status)
    MergeFrom(*source);
  }
}

void Epi_Location_Data_Age_Status::MergeFrom(const Epi_Location_Data_Age_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Epi.Location.Data.Age.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  day_.MergeFrom(from.day_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Epi_Location_Data_Age_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Epi.Location.Data.Age.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epi_Location_Data_Age_Status::CopyFrom(const Epi_Location_Data_Age_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Epi.Location.Data.Age.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epi_Location_Data_Age_Status::IsInitialized() const {
  return true;
}

void Epi_Location_Data_Age_Status::Swap(Epi_Location_Data_Age_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Epi_Location_Data_Age_Status::InternalSwap(Epi_Location_Data_Age_Status* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  day_.InternalSwap(&other->day_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Epi_Location_Data_Age_Status::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_epi_2eproto);
  return ::file_level_metadata_epi_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Epi_Location_Data_Age::InitAsDefaultInstance() {
}
class Epi_Location_Data_Age::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Epi_Location_Data_Age::kNameFieldNumber;
const int Epi_Location_Data_Age::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Epi_Location_Data_Age::Epi_Location_Data_Age()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Epi.Location.Data.Age)
}
Epi_Location_Data_Age::Epi_Location_Data_Age(const Epi_Location_Data_Age& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      status_(from.status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.Epi.Location.Data.Age)
}

void Epi_Location_Data_Age::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Epi_Location_Data_Age_epi_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Epi_Location_Data_Age::~Epi_Location_Data_Age() {
  // @@protoc_insertion_point(destructor:proto.Epi.Location.Data.Age)
  SharedDtor();
}

void Epi_Location_Data_Age::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Epi_Location_Data_Age::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epi_Location_Data_Age& Epi_Location_Data_Age::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Epi_Location_Data_Age_epi_2eproto.base);
  return *internal_default_instance();
}


void Epi_Location_Data_Age::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Epi.Location.Data.Age)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Epi_Location_Data_Age::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Epi_Location_Data_Age*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.Epi.Location.Data.Age.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .proto.Epi.Location.Data.Age.Status status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::Epi_Location_Data_Age_Status::_InternalParse;
          object = msg->add_status();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Epi_Location_Data_Age::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Epi.Location.Data.Age)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Epi.Location.Data.Age.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Epi.Location.Data.Age.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Epi.Location.Data.Age)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Epi.Location.Data.Age)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Epi_Location_Data_Age::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Epi.Location.Data.Age)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Epi.Location.Data.Age.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .proto.Epi.Location.Data.Age.Status status = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->status(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Epi.Location.Data.Age)
}

::google::protobuf::uint8* Epi_Location_Data_Age::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Epi.Location.Data.Age)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Epi.Location.Data.Age.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .proto.Epi.Location.Data.Age.Status status = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->status(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Epi.Location.Data.Age)
  return target;
}

size_t Epi_Location_Data_Age::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Epi.Location.Data.Age)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.Epi.Location.Data.Age.Status status = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->status(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epi_Location_Data_Age::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Epi.Location.Data.Age)
  GOOGLE_DCHECK_NE(&from, this);
  const Epi_Location_Data_Age* source =
      ::google::protobuf::DynamicCastToGenerated<Epi_Location_Data_Age>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Epi.Location.Data.Age)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Epi.Location.Data.Age)
    MergeFrom(*source);
  }
}

void Epi_Location_Data_Age::MergeFrom(const Epi_Location_Data_Age& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Epi.Location.Data.Age)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Epi_Location_Data_Age::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Epi.Location.Data.Age)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epi_Location_Data_Age::CopyFrom(const Epi_Location_Data_Age& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Epi.Location.Data.Age)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epi_Location_Data_Age::IsInitialized() const {
  return true;
}

void Epi_Location_Data_Age::Swap(Epi_Location_Data_Age* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Epi_Location_Data_Age::InternalSwap(Epi_Location_Data_Age* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&status_)->InternalSwap(CastToBase(&other->status_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Epi_Location_Data_Age::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_epi_2eproto);
  return ::file_level_metadata_epi_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Epi_Location_Data::InitAsDefaultInstance() {
}
class Epi_Location_Data::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Epi_Location_Data::kAgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Epi_Location_Data::Epi_Location_Data()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Epi.Location.Data)
}
Epi_Location_Data::Epi_Location_Data(const Epi_Location_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      age_(from.age_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.Epi.Location.Data)
}

void Epi_Location_Data::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Epi_Location_Data_epi_2eproto.base);
}

Epi_Location_Data::~Epi_Location_Data() {
  // @@protoc_insertion_point(destructor:proto.Epi.Location.Data)
  SharedDtor();
}

void Epi_Location_Data::SharedDtor() {
}

void Epi_Location_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epi_Location_Data& Epi_Location_Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Epi_Location_Data_epi_2eproto.base);
  return *internal_default_instance();
}


void Epi_Location_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Epi.Location.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  age_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Epi_Location_Data::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Epi_Location_Data*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.Epi.Location.Data.Age age = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::Epi_Location_Data_Age::_InternalParse;
          object = msg->add_age();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Epi_Location_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Epi.Location.Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Epi.Location.Data.Age age = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Epi.Location.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Epi.Location.Data)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Epi_Location_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Epi.Location.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Epi.Location.Data.Age age = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->age_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->age(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Epi.Location.Data)
}

::google::protobuf::uint8* Epi_Location_Data::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Epi.Location.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Epi.Location.Data.Age age = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->age_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->age(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Epi.Location.Data)
  return target;
}

size_t Epi_Location_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Epi.Location.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.Epi.Location.Data.Age age = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->age_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->age(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epi_Location_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Epi.Location.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Epi_Location_Data* source =
      ::google::protobuf::DynamicCastToGenerated<Epi_Location_Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Epi.Location.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Epi.Location.Data)
    MergeFrom(*source);
  }
}

void Epi_Location_Data::MergeFrom(const Epi_Location_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Epi.Location.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  age_.MergeFrom(from.age_);
}

void Epi_Location_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Epi.Location.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epi_Location_Data::CopyFrom(const Epi_Location_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Epi.Location.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epi_Location_Data::IsInitialized() const {
  return true;
}

void Epi_Location_Data::Swap(Epi_Location_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Epi_Location_Data::InternalSwap(Epi_Location_Data* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&age_)->InternalSwap(CastToBase(&other->age_));
}

::google::protobuf::Metadata Epi_Location_Data::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_epi_2eproto);
  return ::file_level_metadata_epi_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Epi_Location::InitAsDefaultInstance() {
  ::proto::_Epi_Location_default_instance_._instance.get_mutable()->coordinate_ = const_cast< ::proto::Epi_Location_Coordinate*>(
      ::proto::Epi_Location_Coordinate::internal_default_instance());
  ::proto::_Epi_Location_default_instance_._instance.get_mutable()->data_ = const_cast< ::proto::Epi_Location_Data*>(
      ::proto::Epi_Location_Data::internal_default_instance());
}
class Epi_Location::HasBitSetters {
 public:
  static const ::proto::Epi_Location_Coordinate& coordinate(const Epi_Location* msg);
  static const ::proto::Epi_Location_Data& data(const Epi_Location* msg);
};

const ::proto::Epi_Location_Coordinate&
Epi_Location::HasBitSetters::coordinate(const Epi_Location* msg) {
  return *msg->coordinate_;
}
const ::proto::Epi_Location_Data&
Epi_Location::HasBitSetters::data(const Epi_Location* msg) {
  return *msg->data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Epi_Location::kIdFieldNumber;
const int Epi_Location::kNameFieldNumber;
const int Epi_Location::kPopulationFieldNumber;
const int Epi_Location::kCoordinateFieldNumber;
const int Epi_Location::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Epi_Location::Epi_Location()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Epi.Location)
}
Epi_Location::Epi_Location(const Epi_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_coordinate()) {
    coordinate_ = new ::proto::Epi_Location_Coordinate(*from.coordinate_);
  } else {
    coordinate_ = nullptr;
  }
  if (from.has_data()) {
    data_ = new ::proto::Epi_Location_Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&population_) -
    reinterpret_cast<char*>(&id_)) + sizeof(population_));
  // @@protoc_insertion_point(copy_constructor:proto.Epi.Location)
}

void Epi_Location::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Epi_Location_epi_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&population_) -
      reinterpret_cast<char*>(&coordinate_)) + sizeof(population_));
}

Epi_Location::~Epi_Location() {
  // @@protoc_insertion_point(destructor:proto.Epi.Location)
  SharedDtor();
}

void Epi_Location::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coordinate_;
  if (this != internal_default_instance()) delete data_;
}

void Epi_Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epi_Location& Epi_Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Epi_Location_epi_2eproto.base);
  return *internal_default_instance();
}


void Epi_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Epi.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && coordinate_ != nullptr) {
    delete coordinate_;
  }
  coordinate_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&population_) -
      reinterpret_cast<char*>(&id_)) + sizeof(population_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Epi_Location::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Epi_Location*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.Epi.Location.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 population = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_population(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .proto.Epi.Location.Coordinate coordinate = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::Epi_Location_Coordinate::_InternalParse;
        object = msg->mutable_coordinate();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.Epi.Location.Data data = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::Epi_Location_Data::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Epi_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Epi.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Epi.Location.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 population = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &population_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Epi.Location.Coordinate coordinate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Epi.Location.Data data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Epi.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Epi.Location)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Epi_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Epi.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Epi.Location.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int64 population = 3;
  if (this->population() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->population(), output);
  }

  // .proto.Epi.Location.Coordinate coordinate = 5;
  if (this->has_coordinate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::coordinate(this), output);
  }

  // .proto.Epi.Location.Data data = 6;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Epi.Location)
}

::google::protobuf::uint8* Epi_Location::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Epi.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Epi.Location.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int64 population = 3;
  if (this->population() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->population(), target);
  }

  // .proto.Epi.Location.Coordinate coordinate = 5;
  if (this->has_coordinate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::coordinate(this), target);
  }

  // .proto.Epi.Location.Data data = 6;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Epi.Location)
  return target;
}

size_t Epi_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Epi.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .proto.Epi.Location.Coordinate coordinate = 5;
  if (this->has_coordinate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinate_);
  }

  // .proto.Epi.Location.Data data = 6;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 population = 3;
  if (this->population() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->population());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epi_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Epi.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Epi_Location* source =
      ::google::protobuf::DynamicCastToGenerated<Epi_Location>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Epi.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Epi.Location)
    MergeFrom(*source);
  }
}

void Epi_Location::MergeFrom(const Epi_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Epi.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_coordinate()) {
    mutable_coordinate()->::proto::Epi_Location_Coordinate::MergeFrom(from.coordinate());
  }
  if (from.has_data()) {
    mutable_data()->::proto::Epi_Location_Data::MergeFrom(from.data());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.population() != 0) {
    set_population(from.population());
  }
}

void Epi_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Epi.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epi_Location::CopyFrom(const Epi_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Epi.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epi_Location::IsInitialized() const {
  return true;
}

void Epi_Location::Swap(Epi_Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Epi_Location::InternalSwap(Epi_Location* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(coordinate_, other->coordinate_);
  swap(data_, other->data_);
  swap(id_, other->id_);
  swap(population_, other->population_);
}

::google::protobuf::Metadata Epi_Location::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_epi_2eproto);
  return ::file_level_metadata_epi_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Epi::InitAsDefaultInstance() {
}
class Epi::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Epi::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Epi::Epi()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Epi)
}
Epi::Epi(const Epi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.Epi)
}

void Epi::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Epi_epi_2eproto.base);
}

Epi::~Epi() {
  // @@protoc_insertion_point(destructor:proto.Epi)
  SharedDtor();
}

void Epi::SharedDtor() {
}

void Epi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epi& Epi::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Epi_epi_2eproto.base);
  return *internal_default_instance();
}


void Epi::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Epi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Epi::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Epi*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.Epi.Location locations = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::Epi_Location::_InternalParse;
          object = msg->add_locations();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Epi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Epi)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Epi.Location locations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Epi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Epi)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Epi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Epi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Epi.Location locations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locations(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Epi)
}

::google::protobuf::uint8* Epi::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Epi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Epi.Location locations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locations(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Epi)
  return target;
}

size_t Epi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Epi)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.Epi.Location locations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Epi)
  GOOGLE_DCHECK_NE(&from, this);
  const Epi* source =
      ::google::protobuf::DynamicCastToGenerated<Epi>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Epi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Epi)
    MergeFrom(*source);
  }
}

void Epi::MergeFrom(const Epi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Epi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
}

void Epi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Epi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epi::CopyFrom(const Epi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Epi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epi::IsInitialized() const {
  return true;
}

void Epi::Swap(Epi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Epi::InternalSwap(Epi* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&locations_)->InternalSwap(CastToBase(&other->locations_));
}

::google::protobuf::Metadata Epi::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_epi_2eproto);
  return ::file_level_metadata_epi_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::Epi_Location_Coordinate* Arena::CreateMaybeMessage< ::proto::Epi_Location_Coordinate >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Epi_Location_Coordinate >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Epi_Location_Data_Age_Status* Arena::CreateMaybeMessage< ::proto::Epi_Location_Data_Age_Status >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Epi_Location_Data_Age_Status >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Epi_Location_Data_Age* Arena::CreateMaybeMessage< ::proto::Epi_Location_Data_Age >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Epi_Location_Data_Age >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Epi_Location_Data* Arena::CreateMaybeMessage< ::proto::Epi_Location_Data >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Epi_Location_Data >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Epi_Location* Arena::CreateMaybeMessage< ::proto::Epi_Location >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Epi_Location >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Epi* Arena::CreateMaybeMessage< ::proto::Epi >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Epi >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
