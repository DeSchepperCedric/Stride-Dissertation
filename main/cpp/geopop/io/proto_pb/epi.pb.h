// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: epi.proto

#ifndef PROTOBUF_INCLUDED_epi_2eproto
#define PROTOBUF_INCLUDED_epi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_epi_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_epi_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_epi_2eproto();
namespace proto {
class Epi;
class EpiDefaultTypeInternal;
extern EpiDefaultTypeInternal _Epi_default_instance_;
class Epi_Location;
class Epi_LocationDefaultTypeInternal;
extern Epi_LocationDefaultTypeInternal _Epi_Location_default_instance_;
class Epi_Location_Coordinate;
class Epi_Location_CoordinateDefaultTypeInternal;
extern Epi_Location_CoordinateDefaultTypeInternal _Epi_Location_Coordinate_default_instance_;
class Epi_Location_Data;
class Epi_Location_DataDefaultTypeInternal;
extern Epi_Location_DataDefaultTypeInternal _Epi_Location_Data_default_instance_;
class Epi_Location_Data_Age;
class Epi_Location_Data_AgeDefaultTypeInternal;
extern Epi_Location_Data_AgeDefaultTypeInternal _Epi_Location_Data_Age_default_instance_;
class Epi_Location_Data_Age_Status;
class Epi_Location_Data_Age_StatusDefaultTypeInternal;
extern Epi_Location_Data_Age_StatusDefaultTypeInternal _Epi_Location_Data_Age_Status_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::Epi* Arena::CreateMaybeMessage<::proto::Epi>(Arena*);
template<> ::proto::Epi_Location* Arena::CreateMaybeMessage<::proto::Epi_Location>(Arena*);
template<> ::proto::Epi_Location_Coordinate* Arena::CreateMaybeMessage<::proto::Epi_Location_Coordinate>(Arena*);
template<> ::proto::Epi_Location_Data* Arena::CreateMaybeMessage<::proto::Epi_Location_Data>(Arena*);
template<> ::proto::Epi_Location_Data_Age* Arena::CreateMaybeMessage<::proto::Epi_Location_Data_Age>(Arena*);
template<> ::proto::Epi_Location_Data_Age_Status* Arena::CreateMaybeMessage<::proto::Epi_Location_Data_Age_Status>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {

// ===================================================================

class Epi_Location_Coordinate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Epi.Location.Coordinate) */ {
 public:
  Epi_Location_Coordinate();
  virtual ~Epi_Location_Coordinate();

  Epi_Location_Coordinate(const Epi_Location_Coordinate& from);

  inline Epi_Location_Coordinate& operator=(const Epi_Location_Coordinate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Epi_Location_Coordinate(Epi_Location_Coordinate&& from) noexcept
    : Epi_Location_Coordinate() {
    *this = ::std::move(from);
  }

  inline Epi_Location_Coordinate& operator=(Epi_Location_Coordinate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Epi_Location_Coordinate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Epi_Location_Coordinate* internal_default_instance() {
    return reinterpret_cast<const Epi_Location_Coordinate*>(
               &_Epi_Location_Coordinate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Epi_Location_Coordinate* other);
  friend void swap(Epi_Location_Coordinate& a, Epi_Location_Coordinate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Epi_Location_Coordinate* New() const final {
    return CreateMaybeMessage<Epi_Location_Coordinate>(nullptr);
  }

  Epi_Location_Coordinate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Epi_Location_Coordinate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Epi_Location_Coordinate& from);
  void MergeFrom(const Epi_Location_Coordinate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Epi_Location_Coordinate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double longitude = 1;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 1;
  double longitude() const;
  void set_longitude(double value);

  // double latitude = 2;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:proto.Epi.Location.Coordinate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double longitude_;
  double latitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epi_2eproto;
};
// -------------------------------------------------------------------

class Epi_Location_Data_Age_Status final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Epi.Location.Data.Age.Status) */ {
 public:
  Epi_Location_Data_Age_Status();
  virtual ~Epi_Location_Data_Age_Status();

  Epi_Location_Data_Age_Status(const Epi_Location_Data_Age_Status& from);

  inline Epi_Location_Data_Age_Status& operator=(const Epi_Location_Data_Age_Status& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Epi_Location_Data_Age_Status(Epi_Location_Data_Age_Status&& from) noexcept
    : Epi_Location_Data_Age_Status() {
    *this = ::std::move(from);
  }

  inline Epi_Location_Data_Age_Status& operator=(Epi_Location_Data_Age_Status&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Epi_Location_Data_Age_Status& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Epi_Location_Data_Age_Status* internal_default_instance() {
    return reinterpret_cast<const Epi_Location_Data_Age_Status*>(
               &_Epi_Location_Data_Age_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Epi_Location_Data_Age_Status* other);
  friend void swap(Epi_Location_Data_Age_Status& a, Epi_Location_Data_Age_Status& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Epi_Location_Data_Age_Status* New() const final {
    return CreateMaybeMessage<Epi_Location_Data_Age_Status>(nullptr);
  }

  Epi_Location_Data_Age_Status* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Epi_Location_Data_Age_Status>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Epi_Location_Data_Age_Status& from);
  void MergeFrom(const Epi_Location_Data_Age_Status& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Epi_Location_Data_Age_Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 day = 2;
  int day_size() const;
  void clear_day();
  static const int kDayFieldNumber = 2;
  ::google::protobuf::uint32 day(int index) const;
  void set_day(int index, ::google::protobuf::uint32 value);
  void add_day(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      day() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_day();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.Epi.Location.Data.Age.Status)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > day_;
  mutable std::atomic<int> _day_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epi_2eproto;
};
// -------------------------------------------------------------------

class Epi_Location_Data_Age final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Epi.Location.Data.Age) */ {
 public:
  Epi_Location_Data_Age();
  virtual ~Epi_Location_Data_Age();

  Epi_Location_Data_Age(const Epi_Location_Data_Age& from);

  inline Epi_Location_Data_Age& operator=(const Epi_Location_Data_Age& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Epi_Location_Data_Age(Epi_Location_Data_Age&& from) noexcept
    : Epi_Location_Data_Age() {
    *this = ::std::move(from);
  }

  inline Epi_Location_Data_Age& operator=(Epi_Location_Data_Age&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Epi_Location_Data_Age& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Epi_Location_Data_Age* internal_default_instance() {
    return reinterpret_cast<const Epi_Location_Data_Age*>(
               &_Epi_Location_Data_Age_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Epi_Location_Data_Age* other);
  friend void swap(Epi_Location_Data_Age& a, Epi_Location_Data_Age& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Epi_Location_Data_Age* New() const final {
    return CreateMaybeMessage<Epi_Location_Data_Age>(nullptr);
  }

  Epi_Location_Data_Age* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Epi_Location_Data_Age>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Epi_Location_Data_Age& from);
  void MergeFrom(const Epi_Location_Data_Age& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Epi_Location_Data_Age* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Epi_Location_Data_Age_Status Status;

  // accessors -------------------------------------------------------

  // repeated .proto.Epi.Location.Data.Age.Status status = 2;
  int status_size() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::proto::Epi_Location_Data_Age_Status* mutable_status(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age_Status >*
      mutable_status();
  const ::proto::Epi_Location_Data_Age_Status& status(int index) const;
  ::proto::Epi_Location_Data_Age_Status* add_status();
  const ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age_Status >&
      status() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.Epi.Location.Data.Age)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age_Status > status_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epi_2eproto;
};
// -------------------------------------------------------------------

class Epi_Location_Data final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Epi.Location.Data) */ {
 public:
  Epi_Location_Data();
  virtual ~Epi_Location_Data();

  Epi_Location_Data(const Epi_Location_Data& from);

  inline Epi_Location_Data& operator=(const Epi_Location_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Epi_Location_Data(Epi_Location_Data&& from) noexcept
    : Epi_Location_Data() {
    *this = ::std::move(from);
  }

  inline Epi_Location_Data& operator=(Epi_Location_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Epi_Location_Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Epi_Location_Data* internal_default_instance() {
    return reinterpret_cast<const Epi_Location_Data*>(
               &_Epi_Location_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Epi_Location_Data* other);
  friend void swap(Epi_Location_Data& a, Epi_Location_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Epi_Location_Data* New() const final {
    return CreateMaybeMessage<Epi_Location_Data>(nullptr);
  }

  Epi_Location_Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Epi_Location_Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Epi_Location_Data& from);
  void MergeFrom(const Epi_Location_Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Epi_Location_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Epi_Location_Data_Age Age;

  // accessors -------------------------------------------------------

  // repeated .proto.Epi.Location.Data.Age age = 1;
  int age_size() const;
  void clear_age();
  static const int kAgeFieldNumber = 1;
  ::proto::Epi_Location_Data_Age* mutable_age(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age >*
      mutable_age();
  const ::proto::Epi_Location_Data_Age& age(int index) const;
  ::proto::Epi_Location_Data_Age* add_age();
  const ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age >&
      age() const;

  // @@protoc_insertion_point(class_scope:proto.Epi.Location.Data)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age > age_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epi_2eproto;
};
// -------------------------------------------------------------------

class Epi_Location final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Epi.Location) */ {
 public:
  Epi_Location();
  virtual ~Epi_Location();

  Epi_Location(const Epi_Location& from);

  inline Epi_Location& operator=(const Epi_Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Epi_Location(Epi_Location&& from) noexcept
    : Epi_Location() {
    *this = ::std::move(from);
  }

  inline Epi_Location& operator=(Epi_Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Epi_Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Epi_Location* internal_default_instance() {
    return reinterpret_cast<const Epi_Location*>(
               &_Epi_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Epi_Location* other);
  friend void swap(Epi_Location& a, Epi_Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Epi_Location* New() const final {
    return CreateMaybeMessage<Epi_Location>(nullptr);
  }

  Epi_Location* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Epi_Location>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Epi_Location& from);
  void MergeFrom(const Epi_Location& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Epi_Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Epi_Location_Coordinate Coordinate;
  typedef Epi_Location_Data Data;

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .proto.Epi.Location.Coordinate coordinate = 5;
  bool has_coordinate() const;
  void clear_coordinate();
  static const int kCoordinateFieldNumber = 5;
  const ::proto::Epi_Location_Coordinate& coordinate() const;
  ::proto::Epi_Location_Coordinate* release_coordinate();
  ::proto::Epi_Location_Coordinate* mutable_coordinate();
  void set_allocated_coordinate(::proto::Epi_Location_Coordinate* coordinate);

  // .proto.Epi.Location.Data data = 6;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 6;
  const ::proto::Epi_Location_Data& data() const;
  ::proto::Epi_Location_Data* release_data();
  ::proto::Epi_Location_Data* mutable_data();
  void set_allocated_data(::proto::Epi_Location_Data* data);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 population = 3;
  void clear_population();
  static const int kPopulationFieldNumber = 3;
  ::google::protobuf::int64 population() const;
  void set_population(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.Epi.Location)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::Epi_Location_Coordinate* coordinate_;
  ::proto::Epi_Location_Data* data_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 population_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epi_2eproto;
};
// -------------------------------------------------------------------

class Epi final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Epi) */ {
 public:
  Epi();
  virtual ~Epi();

  Epi(const Epi& from);

  inline Epi& operator=(const Epi& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Epi(Epi&& from) noexcept
    : Epi() {
    *this = ::std::move(from);
  }

  inline Epi& operator=(Epi&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Epi& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Epi* internal_default_instance() {
    return reinterpret_cast<const Epi*>(
               &_Epi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Epi* other);
  friend void swap(Epi& a, Epi& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Epi* New() const final {
    return CreateMaybeMessage<Epi>(nullptr);
  }

  Epi* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Epi>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Epi& from);
  void MergeFrom(const Epi& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Epi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Epi_Location Location;

  // accessors -------------------------------------------------------

  // repeated .proto.Epi.Location locations = 1;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 1;
  ::proto::Epi_Location* mutable_locations(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location >*
      mutable_locations();
  const ::proto::Epi_Location& locations(int index) const;
  ::proto::Epi_Location* add_locations();
  const ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location >&
      locations() const;

  // @@protoc_insertion_point(class_scope:proto.Epi)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location > locations_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_epi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Epi_Location_Coordinate

// double longitude = 1;
inline void Epi_Location_Coordinate::clear_longitude() {
  longitude_ = 0;
}
inline double Epi_Location_Coordinate::longitude() const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.Coordinate.longitude)
  return longitude_;
}
inline void Epi_Location_Coordinate::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Epi.Location.Coordinate.longitude)
}

// double latitude = 2;
inline void Epi_Location_Coordinate::clear_latitude() {
  latitude_ = 0;
}
inline double Epi_Location_Coordinate::latitude() const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.Coordinate.latitude)
  return latitude_;
}
inline void Epi_Location_Coordinate::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Epi.Location.Coordinate.latitude)
}

// -------------------------------------------------------------------

// Epi_Location_Data_Age_Status

// string name = 1;
inline void Epi_Location_Data_Age_Status::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Epi_Location_Data_Age_Status::name() const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.Data.Age.Status.name)
  return name_.GetNoArena();
}
inline void Epi_Location_Data_Age_Status::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Epi.Location.Data.Age.Status.name)
}
#if LANG_CXX11
inline void Epi_Location_Data_Age_Status::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Epi.Location.Data.Age.Status.name)
}
#endif
inline void Epi_Location_Data_Age_Status::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Epi.Location.Data.Age.Status.name)
}
inline void Epi_Location_Data_Age_Status::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Epi.Location.Data.Age.Status.name)
}
inline ::std::string* Epi_Location_Data_Age_Status::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Epi.Location.Data.Age.Status.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Epi_Location_Data_Age_Status::release_name() {
  // @@protoc_insertion_point(field_release:proto.Epi.Location.Data.Age.Status.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Epi_Location_Data_Age_Status::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.Epi.Location.Data.Age.Status.name)
}

// repeated uint32 day = 2;
inline int Epi_Location_Data_Age_Status::day_size() const {
  return day_.size();
}
inline void Epi_Location_Data_Age_Status::clear_day() {
  day_.Clear();
}
inline ::google::protobuf::uint32 Epi_Location_Data_Age_Status::day(int index) const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.Data.Age.Status.day)
  return day_.Get(index);
}
inline void Epi_Location_Data_Age_Status::set_day(int index, ::google::protobuf::uint32 value) {
  day_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Epi.Location.Data.Age.Status.day)
}
inline void Epi_Location_Data_Age_Status::add_day(::google::protobuf::uint32 value) {
  day_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Epi.Location.Data.Age.Status.day)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Epi_Location_Data_Age_Status::day() const {
  // @@protoc_insertion_point(field_list:proto.Epi.Location.Data.Age.Status.day)
  return day_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Epi_Location_Data_Age_Status::mutable_day() {
  // @@protoc_insertion_point(field_mutable_list:proto.Epi.Location.Data.Age.Status.day)
  return &day_;
}

// -------------------------------------------------------------------

// Epi_Location_Data_Age

// string name = 1;
inline void Epi_Location_Data_Age::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Epi_Location_Data_Age::name() const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.Data.Age.name)
  return name_.GetNoArena();
}
inline void Epi_Location_Data_Age::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Epi.Location.Data.Age.name)
}
#if LANG_CXX11
inline void Epi_Location_Data_Age::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Epi.Location.Data.Age.name)
}
#endif
inline void Epi_Location_Data_Age::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Epi.Location.Data.Age.name)
}
inline void Epi_Location_Data_Age::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Epi.Location.Data.Age.name)
}
inline ::std::string* Epi_Location_Data_Age::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Epi.Location.Data.Age.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Epi_Location_Data_Age::release_name() {
  // @@protoc_insertion_point(field_release:proto.Epi.Location.Data.Age.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Epi_Location_Data_Age::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.Epi.Location.Data.Age.name)
}

// repeated .proto.Epi.Location.Data.Age.Status status = 2;
inline int Epi_Location_Data_Age::status_size() const {
  return status_.size();
}
inline void Epi_Location_Data_Age::clear_status() {
  status_.Clear();
}
inline ::proto::Epi_Location_Data_Age_Status* Epi_Location_Data_Age::mutable_status(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Epi.Location.Data.Age.status)
  return status_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age_Status >*
Epi_Location_Data_Age::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:proto.Epi.Location.Data.Age.status)
  return &status_;
}
inline const ::proto::Epi_Location_Data_Age_Status& Epi_Location_Data_Age::status(int index) const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.Data.Age.status)
  return status_.Get(index);
}
inline ::proto::Epi_Location_Data_Age_Status* Epi_Location_Data_Age::add_status() {
  // @@protoc_insertion_point(field_add:proto.Epi.Location.Data.Age.status)
  return status_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age_Status >&
Epi_Location_Data_Age::status() const {
  // @@protoc_insertion_point(field_list:proto.Epi.Location.Data.Age.status)
  return status_;
}

// -------------------------------------------------------------------

// Epi_Location_Data

// repeated .proto.Epi.Location.Data.Age age = 1;
inline int Epi_Location_Data::age_size() const {
  return age_.size();
}
inline void Epi_Location_Data::clear_age() {
  age_.Clear();
}
inline ::proto::Epi_Location_Data_Age* Epi_Location_Data::mutable_age(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Epi.Location.Data.age)
  return age_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age >*
Epi_Location_Data::mutable_age() {
  // @@protoc_insertion_point(field_mutable_list:proto.Epi.Location.Data.age)
  return &age_;
}
inline const ::proto::Epi_Location_Data_Age& Epi_Location_Data::age(int index) const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.Data.age)
  return age_.Get(index);
}
inline ::proto::Epi_Location_Data_Age* Epi_Location_Data::add_age() {
  // @@protoc_insertion_point(field_add:proto.Epi.Location.Data.age)
  return age_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location_Data_Age >&
Epi_Location_Data::age() const {
  // @@protoc_insertion_point(field_list:proto.Epi.Location.Data.age)
  return age_;
}

// -------------------------------------------------------------------

// Epi_Location

// int64 id = 1;
inline void Epi_Location::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Epi_Location::id() const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.id)
  return id_;
}
inline void Epi_Location::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.Epi.Location.id)
}

// string name = 2;
inline void Epi_Location::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Epi_Location::name() const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.name)
  return name_.GetNoArena();
}
inline void Epi_Location::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Epi.Location.name)
}
#if LANG_CXX11
inline void Epi_Location::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Epi.Location.name)
}
#endif
inline void Epi_Location::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Epi.Location.name)
}
inline void Epi_Location::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Epi.Location.name)
}
inline ::std::string* Epi_Location::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Epi.Location.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Epi_Location::release_name() {
  // @@protoc_insertion_point(field_release:proto.Epi.Location.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Epi_Location::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.Epi.Location.name)
}

// int64 population = 3;
inline void Epi_Location::clear_population() {
  population_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Epi_Location::population() const {
  // @@protoc_insertion_point(field_get:proto.Epi.Location.population)
  return population_;
}
inline void Epi_Location::set_population(::google::protobuf::int64 value) {
  
  population_ = value;
  // @@protoc_insertion_point(field_set:proto.Epi.Location.population)
}

// .proto.Epi.Location.Coordinate coordinate = 5;
inline bool Epi_Location::has_coordinate() const {
  return this != internal_default_instance() && coordinate_ != nullptr;
}
inline void Epi_Location::clear_coordinate() {
  if (GetArenaNoVirtual() == nullptr && coordinate_ != nullptr) {
    delete coordinate_;
  }
  coordinate_ = nullptr;
}
inline const ::proto::Epi_Location_Coordinate& Epi_Location::coordinate() const {
  const ::proto::Epi_Location_Coordinate* p = coordinate_;
  // @@protoc_insertion_point(field_get:proto.Epi.Location.coordinate)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::Epi_Location_Coordinate*>(
      &::proto::_Epi_Location_Coordinate_default_instance_);
}
inline ::proto::Epi_Location_Coordinate* Epi_Location::release_coordinate() {
  // @@protoc_insertion_point(field_release:proto.Epi.Location.coordinate)
  
  ::proto::Epi_Location_Coordinate* temp = coordinate_;
  coordinate_ = nullptr;
  return temp;
}
inline ::proto::Epi_Location_Coordinate* Epi_Location::mutable_coordinate() {
  
  if (coordinate_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::Epi_Location_Coordinate>(GetArenaNoVirtual());
    coordinate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Epi.Location.coordinate)
  return coordinate_;
}
inline void Epi_Location::set_allocated_coordinate(::proto::Epi_Location_Coordinate* coordinate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete coordinate_;
  }
  if (coordinate) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      coordinate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinate, submessage_arena);
    }
    
  } else {
    
  }
  coordinate_ = coordinate;
  // @@protoc_insertion_point(field_set_allocated:proto.Epi.Location.coordinate)
}

// .proto.Epi.Location.Data data = 6;
inline bool Epi_Location::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline void Epi_Location::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
inline const ::proto::Epi_Location_Data& Epi_Location::data() const {
  const ::proto::Epi_Location_Data* p = data_;
  // @@protoc_insertion_point(field_get:proto.Epi.Location.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::Epi_Location_Data*>(
      &::proto::_Epi_Location_Data_default_instance_);
}
inline ::proto::Epi_Location_Data* Epi_Location::release_data() {
  // @@protoc_insertion_point(field_release:proto.Epi.Location.data)
  
  ::proto::Epi_Location_Data* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::proto::Epi_Location_Data* Epi_Location::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::Epi_Location_Data>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Epi.Location.data)
  return data_;
}
inline void Epi_Location::set_allocated_data(::proto::Epi_Location_Data* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:proto.Epi.Location.data)
}

// -------------------------------------------------------------------

// Epi

// repeated .proto.Epi.Location locations = 1;
inline int Epi::locations_size() const {
  return locations_.size();
}
inline void Epi::clear_locations() {
  locations_.Clear();
}
inline ::proto::Epi_Location* Epi::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Epi.locations)
  return locations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location >*
Epi::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:proto.Epi.locations)
  return &locations_;
}
inline const ::proto::Epi_Location& Epi::locations(int index) const {
  // @@protoc_insertion_point(field_get:proto.Epi.locations)
  return locations_.Get(index);
}
inline ::proto::Epi_Location* Epi::add_locations() {
  // @@protoc_insertion_point(field_add:proto.Epi.locations)
  return locations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Epi_Location >&
Epi::locations() const {
  // @@protoc_insertion_point(field_list:proto.Epi.locations)
  return locations_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_epi_2eproto
