#!/bin/bash
#set -x

# see https://stackoverflow.com/questions/4438306/how-to-remove-trailing-whitespaces-with-sed/4438318

function trim_trailing_space() {
  if [[ $# -eq 0 ]]; then
    echo "$FUNCNAME will trim (in place) trailing spaces in the given file (remove unwanted spaces at end of lines)"
    echo "Usage :"
    echo "$FUNCNAME file"
    return
  fi
  local file=$1
  unamestr=$(uname)
  if [[ $unamestr == 'Darwin' ]]; then
    #specific case for Mac OSX
    sed -E -i ''  's/[[:space:]]*$//' $file
  else
    sed -i  's/[[:space:]]*$//' $file
  fi
}

SRC_FILES_EXTENSIONS="js|ts|cpp|c|h|hpp|php|py|sh|cs|sql|json|ini|xml|conf"

function find_source_files() {
  if [[ $# -eq 0 ]]; then
    echo "$FUNCNAME will list sources files (having extensions $SRC_FILES_EXTENSIONS)"
    echo "Usage :"
    echo "$FUNCNAME folder"
    return
  fi
  local folder=$1

  unamestr=$(uname)
  if [[ $unamestr == 'Darwin' ]]; then
    #specific case for Mac OSX
    find -E $folder -iregex '.*\.('$SRC_FILES_EXTENSIONS')'
  else
    #Rhahhh, lovely
    local extensions_escaped=$(echo $SRC_FILES_EXTENSIONS | sed s/\|/\\\\\|/g)
    #echo "extensions_escaped:$extensions_escaped"
    find $folder -iregex '.*\.\('$extensions_escaped'\)$'
  fi
}

function trim_trailing_space_all_source_files() {
  for f in $(find_source_files .); do trim_trailing_space $f;done
}

# FOR NOW:

UNAME=$(uname)
if [[ $UNAME == 'Darwin' ]]; then
    find main/cpp test/cpp \( -name "*.h" -o -name "*.cpp" -o -name "*.txt" \) -type f \
        -exec sed -E -i ''  's/[[:space:]]*$//' {} \; -exec echo {} \;
    find . \( -name "*.txt" -o -name "*.cmake" -o -name "Makefile" \) -maxdepth 1 -type f \
        -exec sed -E -i ''  's/[[:space:]]*$//' {} \; -exec echo {} \;
else
    find main/cpp test/cpp \( -name "*.h" -o -name "*.cpp" -o -name "*.txt" \) -type f \
        -exec sed -i  's/[[:space:]]*$//' {} \; -exec echo {} \;
    find . \( -name "*.txt" -o -name "*.cmake" -o -name "Makefile" \) -maxdepth 1 -type f \
        -exec sed -i  's/[[:space:]]*$//' {} \; -exec echo {} \;
fi